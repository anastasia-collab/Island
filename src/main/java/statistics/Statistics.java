package statistics;

import model.animals.Animal;

import java.util.Comparator;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.atomic.AtomicInteger;

/**
 * –ö–ª–∞—Å—Å –¥–ª—è —Å–±–æ—Ä–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–∏–º—É–ª—è—Ü–∏–∏.
 */
public class Statistics {
    private static final AtomicInteger totalDeathsByHunger = new AtomicInteger(0);
    private static final AtomicInteger totalDeathsByPredation = new AtomicInteger(0);
    private static final AtomicInteger deathsByHungerToday = new AtomicInteger(0);
    private static final AtomicInteger totalBirths = new AtomicInteger(0);
    private static final AtomicInteger totalPlants = new AtomicInteger(0);

    // –ö–∞—Ä—Ç–∞ —Ç–µ–∫—É—â–µ–π –ø–æ–ø—É–ª—è—Ü–∏–∏: –ö–ª–∞—Å—Å –∂–∏–≤–æ—Ç–Ω–æ–≥–æ ‚Üí –°—á—ë—Ç—á–∏–∫
    private static final Map<Class<? extends Animal>, AtomicInteger> animalPopulation = new ConcurrentHashMap<>();

    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–æ—è–≤–ª–µ–Ω–∏–µ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ (–ø—Ä–∏ —Ä–æ–∂–¥–µ–Ω–∏–∏ –∏–ª–∏ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏)
    public static void registerAnimal(Animal animal) {
        animalPopulation
                .computeIfAbsent(animal.getClass(), k -> new AtomicInteger(0))
                .incrementAndGet();
    }

    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç —Å–º–µ—Ä—Ç—å –∂–∏–≤–æ—Ç–Ω–æ–≥–æ –æ—Ç –≥–æ–ª–æ–¥–∞
    public static void recordDeathByHunger(Animal animal) {
        totalDeathsByHunger.incrementAndGet();
        deathsByHungerToday.incrementAndGet();
        decrementAnimalCount(animal);
    }

    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç —Å–º–µ—Ä—Ç—å –∂–∏–≤–æ—Ç–Ω–æ–≥–æ –æ—Ç —Ö–∏—â–Ω–∏–∫–∞
    public static void recordDeathByPredation(Animal animal) {
        totalDeathsByPredation.incrementAndGet();
        decrementAnimalCount(animal);
    }

    private static void decrementAnimalCount(Animal animal) {
        animalPopulation.computeIfPresent(animal.getClass(), (cls, counter) -> {
            counter.decrementAndGet();
            return counter;
        });
    }

    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–æ–∂–¥–µ–Ω–∏–µ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ
    public static void recordBirth(Animal animal) {
        totalBirths.incrementAndGet();
        registerAnimal(animal);
    }

    // –û–±–Ω–æ–≤–ª—è–µ—Ç –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞—Å—Ç–µ–Ω–∏–π –Ω–∞ –æ—Å—Ç—Ä–æ–≤–µ
    public static void updatePlants(int total) {
        totalPlants.set(total);
    }

    // –ü–æ–ª—É—á–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–º–µ—Ä—Ç–µ–π –æ—Ç –≥–æ–ª–æ–¥–∞ –∑–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å
    public static int getDeathsByHungerCount() {
        return deathsByHungerToday.get();
    }

    // –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –¥–Ω–µ–≤–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–º–µ—Ä—Ç–µ–π –æ—Ç –≥–æ–ª–æ–¥–∞
    public static void resetDailyHungerDeaths() {
        deathsByHungerToday.set(0);
    }

    // –í—ã–≤–æ–¥–∏—Ç –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    public static void printStatistics() {
        System.out.println("\n=== üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –û–°–¢–†–û–í–ê ===\n");

        System.out.println("–ü–æ–ø—É–ª—è—Ü–∏—è –∂–∏–≤–æ—Ç–Ω—ã—Ö:");
        System.out.println("--------------------");
        animalPopulation.entrySet().stream()
                .sorted(Comparator.comparing(e -> e.getKey().getClass().getSimpleName()))
                .forEach(entry -> {
                    Animal animal = null;
                    try {
                        animal = entry.getKey().newInstance();
                    } catch (InstantiationException e) {
                        throw new RuntimeException(e);
                    } catch (IllegalAccessException e) {
                        throw new RuntimeException(e);
                    }
                    int count = entry.getValue().get();
                    String emoji = animal.getEmoji();
                    String name = animal.getClass().getSimpleName();
                    System.out.printf("%s %-10s : %3d%n", emoji, name, count);
                });

        System.out.println("\nüåø –†–∞—Å—Ç–µ–Ω–∏–π: " + totalPlants.get());

        System.out.println("\n–î–∏–Ω–∞–º–∏–∫–∞:");
        System.out.println("---------");
        System.out.printf("–†–æ–∂–¥–µ–Ω–∏–π           : %d%n", totalBirths.get());
        System.out.printf("–°–º–µ—Ä—Ç–µ–π –æ—Ç –≥–æ–ª–æ–¥–∞  : %d%n", totalDeathsByHunger.get());
        System.out.printf("–°–º–µ—Ä—Ç–µ–π –æ—Ç —Ö–∏—â–Ω–∏–∫–æ–≤: %d%n", totalDeathsByPredation.get());

        System.out.println("\n==============================\n");
    }
}
